use std::collections::HashMap;

use bytes::Bytes;
use hyper::service::service_fn;
use serde::Deserialize;
use serde_json::Value;

fn get_data() -> Bytes {
    bytes::Bytes::from_static(b"{\n\t\"command\": \"send\",\n\t\"api_name\": \"nchf-convergedcharging/v3/chargingdata\",\n\t\"method\": \"POST\",\n\t\"body\": {\n\t\t\"subscriberIdentifier\": \"imsi-450081093119285\",\n\t\t\"gpsi\": \"msisdn-821093119285\",\n\t\t\"nfConsumerIdentification\": {\n\t\t\t\"nodeFunctionality\": \"SMF\",\n\t\t\t\"nFPLMNID\": {\n\t\t\t\t\"mcc\": \"460\",\n\t\t\t\t\"mnc\": \"09\"\n\t\t\t},\n\t\t\t\"nFFqdn\": \"cpg01.kt.com\"\n\t\t},\n\t\t\"invocationTimeStamp\": \"<string:func:time>\",\n\t\t\"invocationSequenceNumber\": 0,\n\t\t\"notifyUri\": \"127.0.0.1:8080\",\n\t\t\"inService\": \"TES\",\n\t\t\"multipleUnitUsage\": [\n\t\t\t{\n\t\t\t\t\"ratingGroup\": 499,\n\t\t\t\t\"requestedUnit\": {\n\t\t\t\t\t\"totalVolume\": 2048000\n\t\t\t\t},\n\t\t\t\t\"usedUnitContainer\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"serviceId\": 499,\n\t\t\t\t\t\t\"quotaManagementIndicator\": \"ONLINE_CHARGING\",\n\t\t\t\t\t\t\"time\": 3600,\n\t\t\t\t\t\t\"totalVolume\": 2048000,\n\t\t\t\t\t\t\"downlinkVolume\": 2847,\n\t\t\t\t\t\t\"uplinkVolume\": 283722,\n\t\t\t\t\t\t\"serviceSpecificUnits\": 5,\n\t\t\t\t\t\t\"triggers\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"triggerType\": \"QUOTA_EXHAUSTED\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"triggerType\": \"QUOTA_THRESHOLD\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"eventTimeStamps\": \"<string:func:time>\",\n\t\t\t\t\t\t\"pDUContainerInformation\": {\n\t\t\t\t\t\t\t\"timeofFirstUsage\": \"2020-01-12T10:00:00+09:00\",\n\t\t\t\t\t\t\t\"timeofLastUsage\": \"<string:func:time>\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"serviceId\": 811,\n\t\t\t\t\t\t\"quotaManagementIndicator\": \"ONLINE_CHARGING\",\n\t\t\t\t\t\t\"totalVolume\": 2048000,\n\t\t\t\t\t\t\"triggers\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"triggerType\": \"QUOTA_EXHAUSTED\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"triggerType\": \"QUOTA_THRESHOLD\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"ratingGroup\": 512,\n\t\t\t\t\"usedUnitContainer\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"serviceId\": 512,\n\t\t\t\t\t\t\"quotaManagementIndicator\": \"OFFLINE_CHARGING\",\n\t\t\t\t\t\t\"totalVolume\": 2048000,\n\t\t\t\t\t\t\"triggers\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"triggerType\": \"VALIDITY_TIME\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"pDUContainerInformation\": {\n\t\t\t\t\t\t\t\"qoSInformation\": {\n\t\t\t\t\t\t\t\t\"5qi\": 2,\n\t\t\t\t\t\t\t\t\"maxbrUl\": \"100 bps\",\n\t\t\t\t\t\t\t\t\"maxbrDl\": \"5 Kbps\",\n\t\t\t\t\t\t\t\t\"gbrUl\": \"3 Tbps\",\n\t\t\t\t\t\t\t\t\"gbrDl\": \"128 Mbps\",\n\t\t\t\t\t\t\t\t\"arp\": {\n\t\t\t\t\t\t\t\t\t\"priorityLevel\": 7,\n\t\t\t\t\t\t\t\t\t\"preemptCap\": \"MAY_PREEMPT\",\n\t\t\t\t\t\t\t\t\t\"preemptVuln\": \"NOT_PREEMPTABLE\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"aFCorrelationInformation\": 287422,\n\t\t\t\t\t\t\t\"rATType\": \"NR\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"pDUSessionChargingInformation\": {\n\t\t\t\"chargingId\": 287422,\n\t\t\t\"uetimeZone\": \"+09:00+1\",\n\t\t\t\"userLocationinfo\": {\n\t\t\t\t\"__eutraLocation\": {\n\t\t\t\t\t\"tai\": {\n\t\t\t\t\t\t\"plmnId\": {\n\t\t\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"tac\": \"4305\"\n\t\t\t\t\t},\n\t\t\t\t\t\"__ecgi\": {\n\t\t\t\t\t\t\"plmnId\": {\n\t\t\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"eutraCellId\": \"5BD6007\"\n\t\t\t\t\t},\n\t\t\t\t\t\"globalENbId\": {\n\t\t\t\t\t\t\"plmnId\": {\n\t\t\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"ngeNbId\": \"MacroNGeNB-34B89\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"utraLocation\": {\n\t\t\t\t\t\"__cgi\": {\n\t\t\t\t\t\t\"plmnId\": {\n\t\t\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"lac\": \"abcd\",\n\t\t\t\t\t\t\"cellId\": \"1234\"\n\t\t\t\t\t},\n\t\t\t\t\t\"__sai\": {\n\t\t\t\t\t\t\"plmnId\": {\n\t\t\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"lac\": \"a0b0\",\n\t\t\t\t\t\t\"sac\": \"5678\"\n\t\t\t\t\t},\n\t\t\t\t\t\"rai\": {\n\t\t\t\t\t\t\"plmnId\": {\n\t\t\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"lac\": \"c0d0\",\n\t\t\t\t\t\t\"rac\": \"bb99\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"__nrLocation\": {\n\t\t\t\t\t\"tai\": {\n\t\t\t\t\t\t\"plmnId\": {\n\t\t\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"tac\": \"63F84B\"\n\t\t\t\t\t},\n\t\t\t\t\t\"__ncgi\": {\n\t\t\t\t\t\t\"plmnId\": {\n\t\t\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"nrCellId\": \"225BD6007\"\n\t\t\t\t\t},\n\t\t\t\t\t\"__ignoreNcgi\": \"true\",\n\t\t\t\t\t\"globalGnbId\": {\n\t\t\t\t\t\t\"plmnId\": {\n\t\t\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"__gNbId\": {\n\t\t\t\t\t\t\t\"bitLength\": 24,\n\t\t\t\t\t\t\t\"gNBValue\": \"2A3F47\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"ngeNbId\": \"SMacroNGeNB-34B89\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"pduSessionInformation\": {\n\t\t\t\t\"pduType\": \"IPV6\",\n\t\t\t\t\"ratType\": \"NR\",\n\t\t\t\t\"hPlmnID\": {\n\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t},\n\t\t\t\t\"servingCNPlmnId\": {\n\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t},\n\t\t\t\t\"servingNetworkFunctionID\": {\n\t\t\t\t\t\"nFIPv4Address\": \"192.168.1.16\",\n\t\t\t\t\t\"nFPLMNID\": {\n\t\t\t\t\t\t\"mcc\": \"488\",\n\t\t\t\t\t\t\"mnc\": \"79\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"chargingCharacteristics\": \"0800\",\n\t\t\t\t\"chargingCharacteristicsSelectionMode\": \"ROAMING_DEFAULT\",\n\t\t\t\t\"startTime\": \"2023-01-13T17:00:10+09:00\",\n\t\t\t\t\"stopTime\": \"<string:func:time>\",\n\t\t\t\t\"3gppPSDataOffStatus\": \"ACTIVE\",\n\t\t\t\t\"pduAddress\": {\n\t\t\t\t\t\"pduIPv6AddresswithPrefix\": \"AB:77::67:88\",\n\t\t\t\t\t\"pduAddressprefixlength\": 64,\n\t\t\t\t\t\"iPv6dynamicPrefixFlag\": \"true\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}")
}
fn get_data2() -> Bytes {
    bytes::Bytes::from_static(b"{\n\t\"command\": \"send\",\n\t\"api_name\": \"nchf-convergedcharging/v3/chargingdata\",\n\t\"method\": \"POST\",\n\t\"body\": {\n\t\t\"subscriberIdentifier\": \"imsi-450081093119285\",\n\t\t\"nfConsumerIdentification\": {\n\t\t\"gpsi\": \"msisdn-821093119285\",\n\t\t\t\"nodeFunctionality\": \"SMF\",\n\t\t\t\"nFPLMNID\": {\n\t\t\t\t\"mcc\": \"460\",\n\t\t\t\t\"mnc\": \"09\"\n\t\t\t},\n\t\t\t\"nFFqdn\": \"cpg01.kt.com\"\n\t\t},\n\t\t\"invocationTimeStamp\": \"<string:func:time>\",\n\t\t\"invocationSequenceNumber\": 0,\n\t\t\"notifyUri\": \"127.0.0.1:8080\",\n\t\t\"inService\": \"TES\",\n\t\t\"multipleUnitUsage\": [\n\t\t\t{\n\t\t\t\t\"ratingGroup\": 499,\n\t\t\t\t\"requestedUnit\": {\n\t\t\t\t\t\"totalVolume\": 2048000\n\t\t\t\t},\n\t\t\t\t\"usedUnitContainer\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"serviceId\": 499,\n\t\t\t\t\t\t\"quotaManagementIndicator\": \"ONLINE_CHARGING\",\n\t\t\t\t\t\t\"time\": 3600,\n\t\t\t\t\t\t\"totalVolume\": 2048000,\n\t\t\t\t\t\t\"downlinkVolume\": 2847,\n\t\t\t\t\t\t\"uplinkVolume\": 283722,\n\t\t\t\t\t\t\"serviceSpecificUnits\": 5,\n\t\t\t\t\t\t\"triggers\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"triggerType\": \"QUOTA_EXHAUSTED\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"triggerType\": \"QUOTA_THRESHOLD\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"eventTimeStamps\": \"<string:func:time>\",\n\t\t\t\t\t\t\"pDUContainerInformation\": {\n\t\t\t\t\t\t\t\"timeofFirstUsage\": \"2020-01-12T10:00:00+09:00\",\n\t\t\t\t\t\t\t\"timeofLastUsage\": \"<string:func:time>\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"serviceId\": 811,\n\t\t\t\t\t\t\"quotaManagementIndicator\": \"ONLINE_CHARGING\",\n\t\t\t\t\t\t\"totalVolume\": 2048000,\n\t\t\t\t\t\t\"triggers\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"triggerType\": \"QUOTA_EXHAUSTED\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"triggerType\": \"QUOTA_THRESHOLD\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"ratingGroup\": 512,\n\t\t\t\t\"usedUnitContainer\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"serviceId\": 512,\n\t\t\t\t\t\t\"quotaManagementIndicator\": \"OFFLINE_CHARGING\",\n\t\t\t\t\t\t\"totalVolume\": 2048000,\n\t\t\t\t\t\t\"triggers\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"triggerType\": \"VALIDITY_TIME\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"pDUContainerInformation\": {\n\t\t\t\t\t\t\t\"qoSInformation\": {\n\t\t\t\t\t\t\t\t\"5qi\": 2,\n\t\t\t\t\t\t\t\t\"maxbrUl\": \"100 bps\",\n\t\t\t\t\t\t\t\t\"maxbrDl\": \"5 Kbps\",\n\t\t\t\t\t\t\t\t\"gbrUl\": \"3 Tbps\",\n\t\t\t\t\t\t\t\t\"gbrDl\": \"128 Mbps\",\n\t\t\t\t\t\t\t\t\"arp\": {\n\t\t\t\t\t\t\t\t\t\"priorityLevel\": 7,\n\t\t\t\t\t\t\t\t\t\"preemptCap\": \"MAY_PREEMPT\",\n\t\t\t\t\t\t\t\t\t\"preemptVuln\": \"NOT_PREEMPTABLE\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"aFCorrelationInformation\": 287422,\n\t\t\t\t\t\t\t\"rATType\": \"NR\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"pDUSessionChargingInformation\": {\n\t\t\t\"chargingId\": 287422,\n\t\t\t\"uetimeZone\": \"+09:00+1\",\n\t\t\t\"userLocationinfo\": {\n\t\t\t\t\"__eutraLocation\": {\n\t\t\t\t\t\"tai\": {\n\t\t\t\t\t\t\"plmnId\": {\n\t\t\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"tac\": \"4305\"\n\t\t\t\t\t},\n\t\t\t\t\t\"__ecgi\": {\n\t\t\t\t\t\t\"plmnId\": {\n\t\t\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"eutraCellId\": \"5BD6007\"\n\t\t\t\t\t},\n\t\t\t\t\t\"globalENbId\": {\n\t\t\t\t\t\t\"plmnId\": {\n\t\t\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"ngeNbId\": \"MacroNGeNB-34B89\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"utraLocation\": {\n\t\t\t\t\t\"__cgi\": {\n\t\t\t\t\t\t\"plmnId\": {\n\t\t\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"lac\": \"abcd\",\n\t\t\t\t\t\t\"cellId\": \"1234\"\n\t\t\t\t\t},\n\t\t\t\t\t\"__sai\": {\n\t\t\t\t\t\t\"plmnId\": {\n\t\t\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"lac\": \"a0b0\",\n\t\t\t\t\t\t\"sac\": \"5678\"\n\t\t\t\t\t},\n\t\t\t\t\t\"rai\": {\n\t\t\t\t\t\t\"plmnId\": {\n\t\t\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"lac\": \"c0d0\",\n\t\t\t\t\t\t\"rac\": \"bb99\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"__nrLocation\": {\n\t\t\t\t\t\"tai\": {\n\t\t\t\t\t\t\"plmnId\": {\n\t\t\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"tac\": \"63F84B\"\n\t\t\t\t\t},\n\t\t\t\t\t\"__ncgi\": {\n\t\t\t\t\t\t\"plmnId\": {\n\t\t\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"nrCellId\": \"225BD6007\"\n\t\t\t\t\t},\n\t\t\t\t\t\"__ignoreNcgi\": \"true\",\n\t\t\t\t\t\"globalGnbId\": {\n\t\t\t\t\t\t\"plmnId\": {\n\t\t\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"__gNbId\": {\n\t\t\t\t\t\t\t\"bitLength\": 24,\n\t\t\t\t\t\t\t\"gNBValue\": \"2A3F47\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"ngeNbId\": \"SMacroNGeNB-34B89\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"pduSessionInformation\": {\n\t\t\t\t\"pduType\": \"IPV6\",\n\t\t\t\t\"ratType\": \"NR\",\n\t\t\t\t\"hPlmnID\": {\n\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t},\n\t\t\t\t\"servingCNPlmnId\": {\n\t\t\t\t\t\"mcc\": \"450\",\n\t\t\t\t\t\"mnc\": \"08\"\n\t\t\t\t},\n\t\t\t\t\"servingNetworkFunctionID\": {\n\t\t\t\t\t\"nFIPv4Address\": \"192.168.1.16\",\n\t\t\t\t\t\"nFPLMNID\": {\n\t\t\t\t\t\t\"mcc\": \"488\",\n\t\t\t\t\t\t\"mnc\": \"79\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"chargingCharacteristics\": \"0800\",\n\t\t\t\t\"chargingCharacteristicsSelectionMode\": \"ROAMING_DEFAULT\",\n\t\t\t\t\"startTime\": \"2023-01-13T17:00:10+09:00\",\n\t\t\t\t\"stopTime\": \"<string:func:time>\",\n\t\t\t\t\"3gppPSDataOffStatus\": \"ACTIVE\",\n\t\t\t\t\"pduAddress\": {\n\t\t\t\t\t\"pduIPv6AddresswithPrefix\": \"AB:77::67:88\",\n\t\t\t\t\t\"pduAddressprefixlength\": 64,\n\t\t\t\t\t\"iPv6dynamicPrefixFlag\": \"true\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}")
}

fn case_1() {
    let data = get_data();
    let res = serde_json::from_slice::<HashMap<String, Value>>(&data);
    let res = match res {
        Ok(parse) => {
            let mut cvt = parse
                .iter()
                .map(|(k, v)| format!("  {}: {:#?}", k, v))
                .collect::<Vec<String>>();
            cvt.sort();
            cvt.join("\n")
        }
        Err(err) => {
            format!("Data Parse fail.. err={}\n  raw body=>\n{:?}", err, data)
        }
    };
    println!("Result :");
    println!("{}", res);
}

#[derive(Deserialize, Debug)]
pub(crate) struct SubsInfo {
    pub(crate) supi: Option<String>,
    pub(crate) gpsi: Option<String>,
}

fn case_2() {
    println!("Case 2");
    let data = get_data2();
    let res = serde_json::from_slice::<HashMap<String, Value>>(&data).unwrap();
    for ele in res.values() {
        let a = serde_json::from_value::<SubsInfo>(ele.to_owned());
        println!("{:?}", a);
        if let Ok(res) = a {
            println!("{:?}\n", res);
        }
    }
}

fn main() {
    case_1();
    case_2();
}
